#BlueJ class context
comment0.target=SetString
comment0.text=\n\ Clase\ SetString.\ Implementacion\ de\ un\n\ conjunto\ de\ String\ mediante\ una\ secuencia\n\ enlazada\ ordenada\ lexicograficamente.\n\n\ @author\ (PRG.\ ETSINF.\ UPV)\n\ @version\ (Curso\ 2017/18)\n
comment1.params=
comment1.target=SetString()
comment1.text=\n\ Crea\ un\ conjunto\ vacio.\n
comment2.params=s
comment2.target=void\ add(java.lang.String)
comment2.text=\n\ Inserta\ s\ en\ el\ conjunto.\n\ Si\ s\ ya\ pertenece\ al\ conjunto,\ el\ conjunto\ no\ cambia.\n\n\ @param\ s\ String.\ Elemento\ que\ se\ inserta\ en\ el\ conjunto.\n
comment3.params=s
comment3.target=boolean\ contains(java.lang.String)
comment3.text=\n\ Comprueba\ si\ s\ pertenece\ al\ conjunto.\n\n\ @param\ s\ String.\n\ @return\ true\ sii\ s\ pertenece\ al\ conjunto.\n
comment4.params=s
comment4.target=void\ remove(java.lang.String)
comment4.text=\n\ Elimina\ s\ del\ conjunto.\n\ Si\ s\ no\ pertenece\ al\ conjunto,\ el\ conjunto\ no\ cambia.\n\n\ @param\ s\ String.\n
comment5.params=
comment5.target=int\ size()
comment5.text=\n\ Devuelve\ la\ talla\ o\ cardinal\ del\ conjunto.\n\ @return\ la\ talla\ del\ conjunto.\n
comment6.params=other
comment6.target=SetString\ intersection(SetString)
comment6.text=\n\ Devuelve\ el\ conjunto\ interseccion\ del\ conjunto\ y\ del\ otro\ conjunto.\n\n\ @param\ other\ SetString.\n\ @return\ el\ conjunto\ interseccion.\n
comment7.params=other
comment7.target=SetString\ union(SetString)
comment7.text=\n\ Devuelve\ el\ conjunto\ union\ del\ conjunto\ y\ del\ otro\ conjunto.\n\n\ @param\ other\ SetString.\n\ @return\ el\ conjunto\ union.\n
comment8.params=
comment8.target=java.lang.String\ toString()
comment8.text=\n\ Devuelve\ el\ listado\ de\ los\ Strings\ en\ el\ conjunto,\ en\ orden\n\ lexicogr\u00E1fico,\ y\ separados\ por\ saltos\ de\ linea.\n\ Si\ el\ conjunto\ es\ vacio\ devuelve\ "",\ la\ String\ vacia.\n\n\ @return\ el\ listado\ de\ los\ elementos\ del\ conjunto.\n
numComments=9
